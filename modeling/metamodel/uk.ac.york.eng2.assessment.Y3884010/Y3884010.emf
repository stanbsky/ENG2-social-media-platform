// Encountered some Eclipse issues when using non-URL-like values for URI
@namespace(uri="https://Y3884010/v2", prefix="")
package deployment;

// General

class Deployment {
	val Microservice[*] microservices;
	val Topic[*] topics;
	val CliTool cliTool;
	val Table[*] tables;
    val JoinTable[*] joinTables;
}

class Microservice {
	attr String name;
	attr String javaPackage;
	attr Short port;
	val Controller[*] controllers;
	val Producer[*] producers;
}

class JavaClass {
	attr String className;
	attr Boolean serdeable;
}

// Controller

class Controller extends JavaClass {
	attr String uri;
	val Method[*] methods;
}

class Method {
	attr String name;
	attr Boolean transactional;
	val Parameter[*] parameters;
	val Request request;
	val Response[*] response;
	ref Topic[*] produced;
	
	// Used for codegen for CLI client
	ref Command clientCommand;
}

class Parameter {
	attr String key;
	attr Model value;
}

class Request {
	attr HttpVerb verb;
	attr String uri;
}

class Response {
	attr HttpCode code;
	attr Model body;
}

enum HttpVerb {
    GET;
    PUT;
    POST;
    PATCH;
    DELETE;
}

enum HttpCode {
	OK;
	CREATED;
	NOT_FOUND;
	FORBIDDEN;
}

// CLI tool
// We have a 1-1 mapping between CLI commands and controller endpoints, so rather than redefine them,
// let's use them directly in the CliTool metamodel to maintain that correspondence

class CliTool extends JavaClass {
    val Command[*] commands;
}

class Command extends JavaClass {
	attr String name;
	attr String description;
	ref Method controllerMethod;	
}

// Kafka

class Producer {
	attr String name;
	val ProducerMethod[*] method;
}

class ProducerMethod {
	attr String name;
	ref Topic[1..*] topics;
}

class Topic {
	attr String name;
	attr Model key;
	attr Model value;
}

// Domain model - we use a simple enum to represent return values for code gen purposes
// Given the customisations necessary for models across the different services (e.g. omitting unnecessary fields)
// representing domain models in full in the metamodel was deemed infeasible.

enum Model {
	None;
	Long;
	String;
	Video;
	IterableVideo;
	IterableUser;
	VideoDTO;
	Hashtag;
	HashtagDTO;
	User;
	UserDTO;
	UserVideo;
	HashtagSet;
	Top10DTO;
}

// Relational model - DEPRECATED in favour of using IntelliJ diagram export

class Table {
    attr String name;
    val Column[*] columns;
}

class Column {
    attr String name;
    attr Model type;
}

class ForeignKey {
    ref Column source;
    ref Column destination;
}

class JoinTable extends Table {
}

